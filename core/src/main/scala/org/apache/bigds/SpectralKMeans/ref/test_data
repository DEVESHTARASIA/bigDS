    /*
   val simiData = sc.parallelize(Seq(
      (0, HashMap(0 -> 0.0, 1 -> 0.6, 2 -> 0.9, 3 -> 0.1)),
      (1, HashMap(0 -> 0.6, 1 -> 0.0, 2 -> 0.8)),
      (2, HashMap(0 -> 0.9,1 -> 0.8, 2 -> 0.0, 5 -> 0.2)),
      (3, HashMap(0 -> 0.1,3 -> 0.0, 4 -> 0.7, 5 -> 0.9)),
      (4, HashMap(3 -> 0.7,4 -> 0.0, 5 -> 0.8)),
      (5, HashMap(2 -> 0.2, 3 -> 0.9, 4 -> 0.8, 5 -> 0.0))))
      */


    val sparse2Data = Seq(
      (4,Vectors.sparse(9, Array(4,6,7), Array(0.29324631686347613,4.622668410059815E-5, 0.2916569389499071))),
      (0,Vectors.sparse(9, Array(0,1,2,3), Array(0.4982869292428861,0.24035055040297948,2.5461665732883317E-4,0.32449260062949287))),
      (6,Vectors.sparse(9, Array(4,5,6,7,8), Array(4.6226684100598144E-5,0.17978009280785837,0.3708220469951383,0.009986229498306616,0.21133646682514948))),
      (8,Vectors.sparse(9, Array(5,6,8), Array(0.04965489042951645,0.21133646682514948,0.275496262071805))),
      (2,Vectors.sparse(9, Array(0,2,3), Array(2.5461665732883317E-4,0.019374271413363453,0.015014932546055843))),
      (1,Vectors.sparse(9, Array(0,1,3), Array(0.24035055040297948,0.3043558800443168,0.020003310639924762))),
      (3,Vectors.sparse(9, Array(0,1,2,3), Array(0.32449260062949287,0.020003310639924762,0.015014932546055843,0.3887674085379258))),
      (7,Vectors.sparse(9, Array(4,6,7),Array(0.2916569389499071,0.009986229498306616,0.3006530176971379))),
      (5,Vectors.sparse(9, Array(5,6,8), Array(0.24725633347590126,0.17978009280785837,0.04965489042951645)))
    )
